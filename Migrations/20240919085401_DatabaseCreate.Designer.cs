// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrendyolApiWithEntityFremowork.Data;

#nullable disable

namespace TrendyolApiWithEntityFremowork.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240919085401_DatabaseCreate")]
    partial class DatabaseCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrendyolApiWithEntityFremowork.Entities.ApiDatabaseModel+BrandDatabase", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordId"));

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("TrendyolApiWithEntityFremowork.Entities.ApiDatabaseModel+CategoryDatabase", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordId"));

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("TrendyolApiWithEntityFremowork.Entities.ApiDatabaseModel+ContentDatabase", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ContentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OnSale")
                        .HasColumnType("bit");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordId"));

                    b.Property<double?>("SellingPrice")
                        .HasColumnType("float");

                    b.Property<string>("StockCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Contents");
                });

            modelBuilder.Entity("TrendyolApiWithEntityFremowork.Entities.ApiDatabaseModel+ImageDatabase", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordId"));

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecordId");

                    b.HasIndex("Barcode");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("TrendyolApiWithEntityFremowork.Entities.ApiDatabaseModel+ContentDatabase", b =>
                {
                    b.HasOne("TrendyolApiWithEntityFremowork.Entities.ApiDatabaseModel+BrandDatabase", "Brand")
                        .WithMany("Contents")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrendyolApiWithEntityFremowork.Entities.ApiDatabaseModel+CategoryDatabase", "Category")
                        .WithMany("Contents")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TrendyolApiWithEntityFremowork.Entities.ApiDatabaseModel+ImageDatabase", b =>
                {
                    b.HasOne("TrendyolApiWithEntityFremowork.Entities.ApiDatabaseModel+ContentDatabase", "Content")
                        .WithMany("Images")
                        .HasForeignKey("Barcode");

                    b.Navigation("Content");
                });

            modelBuilder.Entity("TrendyolApiWithEntityFremowork.Entities.ApiDatabaseModel+BrandDatabase", b =>
                {
                    b.Navigation("Contents");
                });

            modelBuilder.Entity("TrendyolApiWithEntityFremowork.Entities.ApiDatabaseModel+CategoryDatabase", b =>
                {
                    b.Navigation("Contents");
                });

            modelBuilder.Entity("TrendyolApiWithEntityFremowork.Entities.ApiDatabaseModel+ContentDatabase", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
